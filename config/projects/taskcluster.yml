taskcluster:
  adminRoles:
    - github-team:taskcluster/core
  repos:
    - github.com/taskcluster/*
    - github.com/json-e/json-e:*
    - github.com/mozilla/community-tc-config:*
    - github.com/mozilla/hawk:*
  externallyManaged:
    # smoketests create these resources, and also cleans them up, so leave
    # them alone here...
    - "Client=project/taskcluster/smoketest/.*"
    - "Role=project:taskcluster:smoketest:.*"
  workerPools:
    ci:
      owner: taskcluster-notifications+workers@mozilla.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      minCapacity: 0
      maxCapacity: 20

    aws-test:
      owner: taskcluster-notifications+workers@mozilla.com
      description: not actively used, but useful for testing docker-worker on AWS
      emailOnError: false
      imageset: docker-worker
      securityGroup: docker-worker
      cloud: aws
      minCapacity: 0
      maxCapacity: 1

    gcp-test:
      owner: taskcluster-notifications+workers@mozilla.com
      description: not actively used, but useful for testing docker-worker on GCP
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      minCapacity: 0
      maxCapacity: 1

    dw-ci:
      # docker-worker's CI requires the 'privileged' scope, so run
      # it on another worker.  Such workers are "untrusted" as this
      # might allow one task to interfere with another.
      owner: taskcluster-notifications+workers@mozilla.com
      emailOnError: false
      imageset: docker-worker
      cloud: gcp
      minCapacity: 0
      maxCapacity: 10
      workerConfig:
        dockerConfig:
          allowPrivileged: true
          disableSeccomp: true

    windows2012r2-amd64-ci:
      owner: taskcluster-notifications+workers@mozilla.com
      emailOnError: true
      imageset: generic-worker-win2012r2
      cloud: aws
      securityGroup: rdp
      minCapacity: 0
      maxCapacity: 10

    release:
      owner: taskcluster-notifications+workers@mozilla.com
      description: "Trusted worker to build Taskcluster releases (only!)"
      emailOnError: true
      imageset: generic-worker-ubuntu-18-04
      cloud: aws
      minCapacity: 0
      maxCapacity: 1
      workerConfig:
        genericWorker:
          config:
            runTasksAsCurrentUser: true

    # gw-ci-* worker pools are for generic-worker CI
    gw-ci-ubuntu-18-04:
      owner: taskcluster-notifications+workers@mozilla.com
      emailOnError: true
      imageset: generic-worker-ubuntu-18-04
      cloud: aws
      minCapacity: 0
      maxCapacity: 10
      workerConfig:
        genericWorker:
          config:
            runTasksAsCurrentUser: true

    gw-ci-ubuntu-18-04-staging:
      owner: taskcluster-notifications+workers@mozilla.com
      emailOnError: true
      imageset: generic-worker-ubuntu-18-04-staging
      cloud: aws
      minCapacity: 0
      maxCapacity: 10
      workerConfig:
        genericWorker:
          config:
            runTasksAsCurrentUser: true

    gw-ci-windows2012r2-amd64:
      owner: taskcluster-notifications+workers@mozilla.com
      emailOnError: true
      imageset: generic-worker-win2012r2
      cloud: aws
      securityGroup: rdp
      minCapacity: 0
      maxCapacity: 10
      workerConfig:
        genericWorker:
          config:
            runTasksAsCurrentUser: true

    gw-ci-windows2012r2-amd64-staging:
      owner: taskcluster-notifications+workers@mozilla.com
      emailOnError: true
      imageset: generic-worker-win2012r2-staging
      cloud: gcp
      securityGroup: rdp
      minCapacity: 0
      maxCapacity: 10
      workerConfig:
        genericWorker:
          config:
            runTasksAsCurrentUser: true

    gw-ci-macos:
      owner: taskcluster-notifications+workers@mozilla.com
      emailOnError: true
      imageset: generic-worker
      cloud: static
      lifecycle:
        reregistrationTimeout: 2592000 # 30 days

    gw-ubuntu-20-04-staging:
      owner: pmoore@mozilla.com
      emailOnError: true
      imageset: generic-worker-ubuntu-20-04-staging
      cloud: gcp
      minCapacity: 0
      maxCapacity: 10

    gw-windows-2022:
      owner: pmoore@mozilla.com
      emailOnError: true
      imageset: generic-worker-win2022
      cloud: aws
      securityGroup: rdp
      minCapacity: 0
      maxCapacity: 10
      workerConfig:
        genericWorker:
          config:
            # While iterating on the image building process for this worker
            # pool, useful for workers not to die immediately...
            idleTimeoutSecs: 3600

  grants:
    - grant:
        - notify:manage-denylist
        # This is the taskcluster channel
        - queue:route:notify.matrix-room.!whDRjjSmICCgrhFHsQ:mozilla.org.*
      to:
        - project-admin:taskcluster

    - grant:
        - queue:create-task:highest:proj-taskcluster/ci
        - queue:create-task:highest:proj-taskcluster/windows2012r2-amd64-ci
        # The account and secret for the Azure testing storage account.
        # This is secret but ok for use by PRs.
        - secrets:get:project/taskcluster/testing/azure
        # This is the taskcluster channel
        - queue:route:notify.matrix-room.!whDRjjSmICCgrhFHsQ:mozilla.org.*
      to: repo:github.com/taskcluster/*

    - grant:
        - queue:create-task:highest:proj-taskcluster/ci
      to: repo:github.com/mozilla/hawk:*

    - grant:
        - secrets:get:project/taskcluster/testing/client-libraries
        - secrets:get:project/taskcluster/testing/taskcluster-*
        - docker-worker:cache:taskcluster-*
      to: repo:github.com/taskcluster/taskcluster:*

    - grant:
        - queue:create-task:highest:proj-taskcluster/release
        - secrets:get:project/taskcluster/release
      to: repo:github.com/taskcluster/taskcluster:tag:v*

    - grant:
        - queue:create-task:highest:proj-taskcluster/release
        - secrets:get:project/taskcluster/staging-release
      to:
        # both pre- and post-bug-1635455
        - repo:github.com/taskcluster/taskcluster:branch:staging-release/*
        - repo:github.com/taskcluster/staging-releases:*

    - grant:
        # pushes to main and releases can notify on failure
        - queue:route:notify.email.taskcluster-internal@mozilla.com.*
        - queue:route:notify.email.taskcluster-notifications@mozilla.com.*
        - queue:route:notify.irc-channel.#taskcluster-bots.*
      to:
        - repo:github.com/taskcluster/taskcluster:branch:main
        - repo:github.com/taskcluster/taskcluster:tag:v*

    - grant:
        - queue:create-task:highest:proj-taskcluster/ci
      to: repo:github.com/json-e/json-e:*

    - grant:
        # pushes to json-e main can read secrets for deploying the site
        - secrets:get:project/taskcluster/json-e-deploy
        # ..and notify on failure
        - queue:route:notify.email.taskcluster-notifications@mozilla.com.*
      to: repo:github.com/json-e/json-e:branch:main

    - grant:
        - assume:project:taskcluster:worker-test-scopes
        - assume:worker-id:docker-worker/docker-worker
        - assume:worker-id:random-local-worker/docker-worker
        - aws-provisioner:create-secret:*
        - docker-worker:cache:docker-worker-garbage-*
        - docker-worker:capability:device:loopbackAudio
        - docker-worker:capability:device:loopbackVideo
        - docker-worker:capability:device:hostSharedMemory
        - docker-worker:capability:privileged
        - docker-worker:capability:device:loopbackAudio:null-provisioner/*
        - docker-worker:capability:device:loopbackVideo:null-provisioner/*
        - docker-worker:capability:device:hostSharedMemory:null-provisioner/*
        - docker-worker:capability:privileged:null-provisioner/*
        - docker-worker:image:localhost:*
        - purge-cache:null-provisioner/*
        - queue:cancel-task
        - queue:cancel-task:docker-worker-tests/*
        - queue:claim-task
        - queue:claim-task:null-provisioner/*
        - queue:claim-work:null-provisioner/*
        - queue:create-artifact:*
        - queue:create-task:lowest:null-provisioner/*
        - queue:create-task:lowest:proj-taskcluster/ci
        - queue:get-artifact:private/docker-worker-tests/*
        - queue:resolve-task
        - queue:route:statuses
        - queue:scheduler-id:docker-worker-tests
        - queue:scheduler-id:taskcluster-github
        - queue:worker-id:docker-worker/docker-worker
        - queue:worker-id:random-local-worker/dummy-worker-*
        - queue:worker-id:random-local-worker/docker-worker
        - secrets:get:project/taskcluster/taskcluster-worker/stateless-dns
        - secrets:get:project/taskcluster/testing/docker-worker/ci-creds
        - secrets:get:project/taskcluster/testing/docker-worker/pulse-creds
      to:
        - repo:github.com/taskcluster/taskcluster:*
        - project:taskcluster:docker-worker-tester

    - grant: assume:project:taskcluster:docker-worker-tester
      to: login-identity:github/54458|catlee

    - grant:
        - auth:create-client:project/taskcluster/smoketest/*
        - auth:create-role:project:taskcluster:smoketest:*
        - auth:delete-client:project/taskcluster/smoketest/*
        - auth:delete-role:project:taskcluster:smoketest:*
        - auth:reset-access-token:project/taskcluster/smoketest/*
        - auth:update-client:project/taskcluster/smoketest/*
        - auth:update-role:project:taskcluster:smoketest:*
        - project:taskcluster:smoketest:*
        - purge-cache:built-in/succeed:smoketest-cache
        - queue:create-task:highest:built-in/*
        - queue:create-task:highest:built-in/fail
        - queue:create-task:highest:built-in/succeed
        - queue:route:index.project.taskcluster.smoketest.*
        - queue:scheduler-id:smoketest
        - secrets:get:project/taskcluster/smoketest/*
        - secrets:set:project/taskcluster/smoketest/*
      to: project:taskcluster:smoketests

    - grant: assume:project:taskcluster:smoketests
      to: github-team:taskcluster/smoketesters

    - grant:
        - assume:worker-id:test-worker-group/test-worker-id
        - assume:worker-type:test-provisioner/*
        - auth:create-client:project/taskcluster:generic-worker-tester/TestReclaimCancelledTask
        - auth:create-client:project/taskcluster:generic-worker-tester/TestResolveResolvedTask
        - auth:sentry:generic-worker-tests
        - generic-worker:cache:banana-cache
        - generic-worker:cache:devtools-app
        - generic-worker:cache:test-modifications
        - generic-worker:cache:unknown-issuer-app-cache
        - generic-worker:os-group:test-provisioner/*
        - generic-worker:run-as-administrator:test-provisioner/*
        - queue:cancel-task:test-scheduler/*
        - assume:worker-pool:test-provisioner/*
        - queue:create-artifact:public/*
        - queue:create-task:highest:test-provisioner/*
        - queue:scheduler-id:test-scheduler
        - queue:get-artifact:SampleArtifacts/_/X.txt
        - queue:get-artifact:SampleArtifacts/_/non-existent-artifact.txt
        - queue:get-artifact:SampleArtifacts/b/c/d.jpg
        - queue:resolve-task
      to: project:taskcluster:generic-worker-tester

    - grant:
        - assume:project:taskcluster:generic-worker-tester
        - queue:create-task:highest:proj-taskcluster/gw-ci-*
        - queue:create-task:highest:proj-taskcluster/dw-ci
        - generic-worker:cache:generic-worker-checkout
        - secrets:get:project/taskcluster/testing/generic-worker/ci-creds
        - queue:scheduler-id:taskcluster-level-1
        - queue:route:checks
      to:
        - repo:github.com/taskcluster/taskcluster:*
        - repo:github.com/taskcluster/staging-releases:*

    - grant:
        - queue:create-task:medium:proj-taskcluster/gw-ci-*
        - queue:route:index.project.taskcluster.telescope.periodic.v01
        - queue:scheduler-id:-
      to:
        - hook-id:project-taskcluster/telescope-periodic-v01

    - grant:
        - queue:create-task:medium:proj-taskcluster/gw-ci-ubuntu-18-04
      to:
        - repo:github.com/taskcluster/docker-exec-websocket-server:*
        - repo:github.com/taskcluster/docker-exec-websocket-client:*

  clients:
    smoketests:
      scopes:
        - assume:project:taskcluster:smoketests
    docker-worker/ci:
      scopes:
        - assume:project:taskcluster:docker-worker-tester
    # Client for workerpool proj-taskcluster/gw-ci-macos.
    generic-worker/ci-macos:
      scopes:
        - assume:worker-pool:proj-taskcluster/gw-ci-macos
        - assume:worker-id:proj-taskcluster/*
    # Client for workerpool proj-taskcluster/gw-ci-macos-staging.
    generic-worker/ci-macos-staging:
      scopes:
        - assume:worker-pool:proj-taskcluster/gw-ci-macos-staging
        - assume:worker-id:proj-taskcluster/*
    # Client for workerpool proj-taskcluster/gw-ci-raspbian-stretch
    generic-worker/ci-raspbian-stretch:
      scopes:
        - assume:worker-pool:proj-taskcluster/gw-ci-raspbian-stretch
        - assume:worker-id:proj-taskcluster/*
    # Client for proj-taskcluster/gw-ci-windows10-amd64. This client is
    # currently used by a single manually configured worker, running in Azure.
    # When we have an azure provider, we can terminate this worker, delete this
    # client, and use worker manager provisioned instances instead.
    generic-worker/ci-windows10-amd64:
      scopes:
        - assume:worker-pool:proj-taskcluster/gw-ci-windows10-amd64
        - assume:worker-id:proj-taskcluster/*
    # Client for workerpool proj-taskcluster/gw-ci-windows10-arm
    generic-worker/ci-windows10-arm:
      scopes:
        - assume:worker-pool:proj-taskcluster/gw-ci-windows10-arm
        - assume:worker-id:proj-taskcluster/*
    # A client whose clientId and accessToken are stored in taskcluster secret
    # `project/taskcluster/testing/generic-worker/ci-creds` and used by
    # commands in generic-worker's .taskcluster.yml to create production tasks
    # that are then claimed and processed by the generic-worker build under
    # test.
    generic-worker/taskcluster-ci:
      scopes:
        - assume:project:taskcluster:generic-worker-tester
    # A client whose accessToken is securely stored in travis-ci.org
    # taskcluster/generic-worker project as encrypted environment variable
    # TASKCLUSTER_ACCESS_TOKEN, and used by commands in generic-worker's
    # .travis.yml to create production tasks that are then claimed and
    # processed by the generic-worker build under test in travis-ci.org.
    generic-worker/travis-ci:
      scopes:
        - assume:project:taskcluster:generic-worker-tester
    # This client is used to test the client libraries in Taskcluster CI
    # Its access token is in `community-tc-secret-values.yml`.
    testing/client-libraries:
      scopes:
        - "object:upload:taskcluster:taskcluster/test/*"
        - "object:download:taskcluster/test/*"
    # A client for the Telescope-Demo site
    # Access token is stored in GCP Secret Manager
    # GCP project is mozilla-api-stage
    telescope-demo-client:
      description: >
        This is a temporary client created by SysEng for the Telescope-demo environment

      scopes:
        - assume:hook-id:project-taskcluster/*
        - hooks:modify-hook:project-taskcluster/*
        - index:insert-task:project.taskcluster.*
        - queue:create-task:highest:proj-taskcluster/*
        - queue:route:index.project.taskcluster.*
        - queue:scheduler-id:-
        - secrets:get:project/taskcluster/*
        - secrets:set:project/taskcluster/*
  secrets:
    # client_id/access_token for project/taskcluster/testing/docker-worker/ci-creds
    testing/docker-worker/ci-creds: true
    # client_id/access_token for generic-worker integration tests
    testing/generic-worker/ci-creds: true
    testing/azure:
      AZURE_ACCOUNT: $taskcluster-azure-account
      AZURE_ACCOUNT_KEY: $taskcluster-azure-account-key

    testing/taskcluster-auth: true
      # auth's secrets contain a GCP credential which has too many parts
      # to try to encode in secret values

    testing/taskcluster-notify:
      AWS_ACCESS_KEY_ID: $taskcluster-notify-aws-access-key-id
      AWS_SECRET_ACCESS_KEY: $taskcluster-notify-aws-secret-access-key

    testing/taskcluster-queue:
      AWS_ACCESS_KEY_ID: $taskcluster-queue-aws-access-key-id
      AWS_SECRET_ACCESS_KEY: $taskcluster-queue-aws-secret-access-key
      PUBLIC_ARTIFACT_BUCKET: $taskcluster-queue-public-bucket
      PRIVATE_ARTIFACT_BUCKET: $taskcluster-queue-private-bucket
      ARTIFACT_REGION: $taskcluster-queue-region

    testing/taskcluster-object:
      # Note, test bucket was created manually, tests do not dynamically create buckets.
      AWS_ACCESS_KEY_ID: $taskcluster-object-aws-access-key-id
      AWS_SECRET_ACCESS_KEY: $taskcluster-object-aws-secret-access-key
      AWS_TEST_BUCKET: $taskcluster-object-aws-test-bucket
      # Google backend stores objects using Amazon S3 protocol via interoperability API
      # See https://cloud.google.com/storage/docs/interoperability
      # These credentials are used for object service google backend unit tests.
      # Note, test bucket was created manually, tests do not dynamically create buckets.
      GOOGLE_ACCESS_KEY_ID: $taskcluster-object-google-access-key-id
      GOOGLE_SECRET_ACCESS_KEY: $taskcluster-object-google-secret-access-key
      GOOGLE_TEST_BUCKET: $taskcluster-object-google-test-bucket

    testing/client-libraries:
      TASKCLUSTER_CLIENT_ID: project/taskcluster/testing/client-libraries
      TASKCLUSTER_ACCESS_TOKEN: $taskcluster-testing-client-libraries-access-token

    # key for deploying json-e docs; this corresponds to a "deploy key" on the
    # json-e/json-e github repo.
    json-e-deploy: true
    release:
      DOCKER_USERNAME: $taskcluster-release-docker-hub-username
      DOCKER_PASSWORD: $taskcluster-release-docker-hub-password
      PYPI_USERNAME: $taskcluster-release-pypi-username
      PYPI_PASSWORD: $taskcluster-release-pypi-password
      NPM_TOKEN: $taskcluster-release-npm-token
      GH_TOKEN: $taskcluster-release-gh-token
      CRATESIO_TOKEN: $taskcluster-release-cratesio-token
    staging-release:
      GH_TOKEN: $taskcluster-staging-release-gh-token

  hooks:
    telescope-periodic-v01:
      description: >
        Periodically run a simple task, monitored by
        [Telescope](https://telescope-demo.api.data.allizom.org).
      name: Periodic task for Telescope monitoring
      owner: jwhitlock@mozilla.com
      emailOnError: false
      schedule: ['*/15 * * * *']
      task:
        taskQueueId: proj-taskcluster/gw-ci-ubuntu-18-04
        routes:
          - index.project.taskcluster.telescope.periodic.v01
        created:
          $fromNow: 0 seconds
        expires:
          $fromNow: 1 day
        deadline:
          $fromNow: 30 minutes
        payload:
          command:
            - - /bin/bash
              - -vxec
              - |
                mkdir -p workspace/results
                echo '{"version": 1.0, "status": "OK"}' > workspace/results/status.json
          artifacts:
            - name: public/results/status.json
              path: workspace/results/status.json
              type: file
          maxRunTime: 60
        metadata:
          name: telescope-periodic-v01
          owner: jwhitlock@mozilla.com
          source: >-
            https://github.com/mozilla/community-tc-config/blob/main/config/projects/taskcluster.yml
          description: >
            A simple task, run every 15 minutes, monitored by
            [Telescope](https://telescope-demo.api.data.allizom.org).
      triggerSchema:
        type: object
        properties: {}
        additionalProperties: false
