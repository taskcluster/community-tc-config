version: 1
reporting: checks-v1
policy:
  pullRequests: public
tasks:
  $let:
    owner: taskcluster-internal@mozilla.com
    repo:
      $if: 'tasks_for == "github-push"'
      then:
        clone_url: ${event.repository.url}
        url: ${event.repository.url}
        ref: ${event.after}
      else:
        $if: 'tasks_for == "github-pull-request"'
        then:
          clone_url: ${event.pull_request.head.repo.clone_url}
          url: ${event.pull_request.head.repo.url}
          ref: ${event.pull_request.head.sha}
        else:
          clone_url: ${event.repository.url}
          url: ${event.repository.url}
          ref: ${event.release.tag_name}
  in:
    $let:
      tests:
        - image: 'python:3.11'
          name: tc-admin diff
          command:
            - /bin/bash
            - '--login'
            - '-c'
            - >-
              git clone ${repo.clone_url} repo &&
              cd repo &&
              git config advice.detachedHead false &&
              git checkout ${repo.ref} &&
              pip install --no-use-pep517 -e . &&
              tc-admin generate --without-secrets >/dev/null &&
              { tc-admin diff --without-secrets | cat; true; }
        - image: 'python:3.11'
          name: black
          command:
            - /bin/bash
            - '--login'
            - '-c'
            - >-
              git clone ${repo.clone_url} repo &&
              cd repo &&
              git config advice.detachedHead false &&
              git checkout ${repo.ref} &&
              pip install black &&
              black --diff generate
        - image: 'python:3.11'
          name: yamllint
          command:
            - /bin/bash
            - '--login'
            - '-c'
            - >-
              git clone ${repo.clone_url} repo &&
              cd repo &&
              git config advice.detachedHead false &&
              git checkout ${repo.ref} &&
              pip install yamllint &&
              yamllint config
    in:
      $let:
        test_tasks:
          $map: {$eval: tests}
          each(test):
            taskId: {$eval: as_slugid(test.name)}
            provisionerId: proj-taskcluster
            workerType: ci
            created: {$fromNow: ''}
            deadline: {$fromNow: '60 minutes'}
            payload:
              maxRunTime: 3600
              image: ${test.image}
              command: {$eval: 'test.command'}
            metadata:
              name: ${test.name}
              description: ${test.name}
              owner: ${owner}
              source: ${repo.url}

      in:
        $flattenDeep:
        - $if: 'tasks_for == "github-push" && event["ref"] == "refs/heads/main"'
          then: {$eval: test_tasks}
        - $if: 'tasks_for == "github-pull-request" && event["action"] in ["opened", "reopened", "synchronize"]'
          then: {$eval: test_tasks}
